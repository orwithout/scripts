nif.sh (network info)
ver:0.7.5.20211202
用于检测linux的[tcp/udp端口状态] [延时] [带宽] [路由追踪]
下载: wget https://github.com/orwithout/scripts/blob/main/nif.sh
快速使用: ① cd切换到下载目录 ;② 给与执行权限chmod +x ./nif.sh ;③ 执行./nif.sh -bump

--   1、结果展示
--   2、结果解说
--   3、参数说明
--   4、使用示例

1、结果展示
$ ./nif.sh 1.2.3.4 -u:ssh-user -p"ssh-password" -lso"local-sudo-passwd" -nic-ci:8085,8086  -lpu -lnu -lcu -liu -rcu -riu -w
---------------------------------------------------------------------------------------------
    (联机模式!运行如果中断,远端机可能会残留iptables规则,届时请查看./nif.sh.log.92c562a0-3ddd-11ec-9bbc-0242ac130002........
       port   state                service                  latency              bandwidth(bps)
   8085/tcp   open                 unknown/iperf3           1ms(loss0/2)         ↑17.0G/↓19.8G
   8086/tcp   open                 d-s-n/iperf3             1ms(loss0/2)         ↑16.9G/↓20.3G
   8085/udp   open                 unknown/socat            1ms(loss0/2)         ↑3.24G(loss0%)±0.000ms/↓2.31G(loss0%)±0.000ms
   8086/udp   open                 d-s-n/socat              1ms(loss0/2)         ↑2.96G(loss0%)±0.000ms/↓2.23G(loss0%)±0.000ms
 remote-sys   lan-nic   lan-ip           lan-gateway      domain             external-ip      -a                 ping
     centos   eth0      1.2.3.4          1.2.3.1          -                  1.2.3.4          1.2.3.4            0.127ms
  local-sys   lan-nic   lan-ip           lan-gateway      domain             dns-serv
     debian   ens160    2.3.4.5          2.3.4.1          -                  2.3.4.1

Nmap scan report for 1.2.3.4
Host is up (0.00033s latency).
MAC Address: 00:50:56:8B:73:F3 (citrix)
TRACEROUTE
HOP RTT     ADDRESS
1   0.33 ms 2.3.4.1
2   0.66 ms 1.2.3.4
------------------------------------------------

2、结果说明
    对端口的测试结果,会返回5个项 :port  state  service  latency  bandwidth
    -   :表示未作检测
    port :端口号,如 1234/tcp  1234/udp
    state :对端口号检测的状态结果,有 open established refused close timeout等
        open :端口可访问,且有服务开放,(来自使用了nmap的检测)
        open|filtered :端口开放但没有任何响应,服务可能开放,也可能是有防火墙在阻挡,(来自nmap检测)
        colse :端口可访问,但服务是关闭的(来自nmap)
        filtered :被防火墙阻挡(来自nmap)
        unfiltered :无法确定端口打开还是关闭,但未被防火墙阻挡(来自nmap)
        closed|filtered :可能是端口关闭,也可能是有防火墙在阻挡(来自nmap)
        established :端口打开,且有服务开放(来自使用了ssh的检测)
        refused :端口拒绝响应,估计是与nmap的close返回相似(来自ssh)
        timeout :超时,使用ssh检测时,若超过3秒未有结论,会被脚本强行设置为超时状态,极有可能是遇到了防火墙(来自ss)
    service :端口上的服务识别,如80是http服务,3306是mysql服务,未必是安装测试数据分析的结果,起参考作用(来自nmap)
        /iperf3 :说明是在远端机开启了iperf3,然后做的联机测试
        /socat :说明是在远端机开启了socat,然后做的联机测试
    latency :端口延时,如10ms(loss0/2),说明延时是10,丢包是0,一个尝试了2次而计算的平均值 .延时测试含两种方式
        ssh方式 :此方式得到的结果会受被对端的服务类型影响,例如若对端服务是iperf3,值会大于2000ms
        socat方式 :此方式需要先在对端机上也socat侦听,结果准确可信
    bandwidth :带宽测试结果,区分udp和tcp,带宽测试需要小心,会造成网络堵塞(约10秒)
        tcp结果 ↑17.1G/↓948M 表示上传带宽有17.1Gbps 下载有948Mbps
        udp结果 ↑1.70G(loss0.18%)±0.002ms/↓953M(loss0.42%)±0.011ms 表示上传1.7Gbps 丢包率0.18% 时延波动±0.002ms,下载…

3、参数说明
    -v[ersion] :打印版本、版权信息
    -h[elp] :打印帮助文档
    -a[ddress] :指定远端地址 -a:8.8.8.8 ,key:value之间冒号可以省略 -a8.8.8.8 .下同
        ip|域名 可以省略-a,在参数列表里直接写ip或域名
    -sp |-ssp :远端机器ssh服务端口 -sp:2022 -sp2022 省略则使用22 (联机测试需要ssh在远端机上执行命令,以安装/卸载软件或设置端口转发)
    -u[ser] :远端机用户名 -u:root  -umyusername
    -exe[cution] :用本脚本在远端机执行命令 -exe:'cat /etc/os-release' -exe'if true ;then ping -c 8 qq.com >./ping.log ;fi &'
    -[nci]-[tucif] :指定检测方式和待检测端口(默认是利用本机的ssh客户端，类似利用telnet,只能检测tcp)
        n指nmap,c指socat,i指iperf3,t指tcp,u指udp .对-[nci]-后面的部分 :c指远端上socat,i指远端机上iperf,f指远端iptables转发设置
        对本端机和远端机,ncituf参数逻辑上可以自由组合,但有些组合是没有意义的。一些示例：
        --:22   默认方式timeout 3 ssh -oBatchMode=yes -oStrictHostKeyChecking=no a_uuid_str@address" -v -p22 检测22(仅tcp)
                会得到established refused timeout三种结果,established说明是在线状态。若需要更详细可使用nmap且可以检测udp
        --:22,23,8086-8088 检测22 23 8086 8087 8088.可以使用[,]隔离来指定多个,也可同时使用[-]来给定一个范围.下同
        -n-:22  使用nmap检测,支持某些能回音的udp .未指定tcp或udp则都检测,下同
                会得到6种结果状态,参考nmap手册 https://nmap.org/book/man-port-scanning-basics.html
                单独指定tcp 或udp ,或两者都有(后面雷同、可以通用) -n-t:22   -n-u:22   -n-tu:22
        -n-c:22 指定--c会在远端机上开启socat以侦听待检测的端口,然后根据指定的-n使用nmap进行检测 .如果远端机上22是被占用则会失败
                单独指定tcp 或udp ,或两者都有(后面雷同、可以通用) -n-tc22   -n-uc22   -n-tuc22
        -n-cf:22比上面-n-c:22多个f,脚本会在远端开启socat,然后使用iptables将22端口劫持转发到socat上,规则,脚本会自动清理,但若强行停
                止了脚本运行,可能会导致iptables转发策略残留,在远端机上运行 sudo iptables -tnat -nvL 可以查看
                假设socat侦听了5678,远端机ip为1.2.3.4,网卡名是eth0,则脚本添加的转发规则
                是 :sudo iptables -t nat -A PREROUTING -p tcp -i eth0 -d 1.2.3.4 --dport 22 -j DNAT --to 1.2.3.4:5678
                udp:sudo iptables -t nat -A PREROUTING -p tcp -i eth0 -d 1.2.3.4 --dport 22 -j DNAT --to 1.2.3.4:5678
                对应的删除命令则
                是 :sudo iptables -t nat -D PREROUTING -p tcp -i eth0 -d 1.2.3.4 --dport 22 -j DNAT --to 1.2.3.4:5678
                udp:sudo iptables -t nat -D PREROUTING -p udp -i eth0 -d 1.2.3.4 --dport 22 -j DNAT --to 1.2.3.4:5678
                如果远端机系统可以重启,重启后,这些策略会自动消失
        -c-cf:22远端机开启socat,并将22劫持-转发给socat,然后本端机使用socat对远端22检测,会得到延时信息,未指定tcp或udp则都检测
        -i-if:22 在两端使用iperf3联机做带宽测试,未指定tcp或udp则都检测
        -nci-tucif:22远端依次开启socat iperf3 以及对应的转发,然后优先使用nmap对socat做状态检测,然后用socat测延时,iperf3测带宽
        端口|端口串 可以省略-[nci]-[tucif],在参数列表直接写端口,类似 22 或22,23,24,8080-8088
    -c[ount] :检测次数,比如延时,需要检测多次以取平均值 -c:5  -c8
    -rn |remotenmap :远端nmap软件使用 -rn:install(安装nmap) -rn:remove(用完后卸载) -rn:use(若没有则安装-使用后卸载,有则只使用)
        可以简写 -rn:i -rn:r -rn:u 下同
    -ri |remoteiperf3 :远端iperf3软件 -ri:install(安装iperf3) -ri:remove(用完后和卸载) -ri:use(若没有则安装-用后卸载,有则只使用)
    -rc |remotesocat :远端socat软件使用方法 -rc:install -rc:remove -rc:use
    -rf |remoteforwardset :远端forward -rf:enable(启用forward) -rf:disable(用完后关闭) -rf:use(若没有则开启-用后关闭,有则只使用)
    -ln |localnmap :本端机nmap使用,方法与-rn一样
    -li |localiperf3 :本端机iperf3使用,方法与-ri一样
    -lc |localsocat :本端机socat使用,方法与-rc一样 .注意,不是 -ls
    -lp |localsshpass :本端机sshpass使用,用于自动填写ssh密码,方法与上类似 -lp:install -lp:remove -lp:use
    -le |localsocat :本端机expect,用于本端自动su命令提权(不用与远端,因为不稳定) 方法与上类似 -le:install -le:remove -le:use
    -k[ey] :指定ssh私钥。ssh登录可以使用密码,也可以使用key私钥文件 -k:/home/username/.ssh/private.key
    -p[assword] :指定ssh的登录密码 -p:'mypasswd' 在命令行参数里写密码会不安全,请继续往下看
    -lso :指定本端机sudo密码,可以用来提权 -lso'mypasswd'
    -lsu :指定本端机su命令密码，也就是root密码,也是用来提取的,没有配置sudo时也可以使用 -lsu'mypasswd'
    -etp :在-p上加入et(enter),让脚本来提示你将密码输入,这样密码不会被记录到history里 -etp
    -etlso :在-lso上加入et(enter),让脚本来提示你将-lso密码输入 -etlso
    -etlsu :在-lsu上加入et(enter),让脚本来提示你将-lsu密码输入 -etlsu
    -to |timeout :使socat和iptables服务多少秒后退出,脚本被中断仍然有效,可避免服务残留,默认500,到期后依赖socat或iperf3的测试将失败
    -w[ait] :指定-wait会获取更多信息,包括主机、路由追踪
    -b[ump] :这是一个野蛮选项,繁多的参数让你心烦吧。加入一个 -bump 让脚本来为你选择,你只需要指定一个远端机的地址,和端口号
    -log :指定日志信息输出到文件 -log/var/log/nif.sh.log   -log:/home/myuser/nif.sh.log
